{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions .jsx","components/Satistics/Satistics.jsx","components/Notification/Notification.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["Section","title","FeedbackOptions","options","onLeaveFeedback","map","item","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","Container","styled","div","App","state","leaveFeedback","setState","prevState","countTotalFeedback","i","Object","values","length","countPositiveFeedbackPercentage","totalFeedback","toFixed","this","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQACaA,EAAU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OACE,mCACE,6BAAKA,OCHEC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzC,OACE,mCACED,EAAQE,KAAI,SAACC,GACX,OACE,wBAAmBC,KAAMD,EAAME,QAAS,WAAMJ,EAAgBE,IAA9D,SACGA,GADUA,SCLVG,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACtD,OACE,qCACE,4CACA,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,EAAX,OACA,oDAAuBC,EAAvB,WCROC,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC1B,OACI,4BAAIA,K,OCDCC,E,KAAYC,EAAOC,IAAV,sICKTC,EAAb,4MACEC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,GAJT,EAMEU,cAAgB,SAAChB,GACf,EAAKiB,UAAS,SAACC,GAAD,sBACXlB,EAAOkB,EAAUlB,GAAQ,OARhC,EAYEmB,mBAAqB,WAEnB,IADA,IAAIZ,EAAQ,EACHa,EAAI,EAAGA,EAAIC,OAAOC,OAAO,EAAKP,OAAOQ,OAAQH,GAAK,EACzDb,GAASc,OAAOC,OAAO,EAAKP,OAAOK,GAErC,OAAOb,GAjBX,EAoBEiB,gCAAkC,WAChC,IAAIC,EAAgB,EAAKN,qBAEzB,OADoB,EAAKJ,MAAMX,KAAOqB,EAAiB,KACrCC,QAAQ,IAvB9B,4CA0BE,WACE,IAAMP,EAAqBQ,KAAKR,qBAC1BK,EAAkCG,KAAKH,kCAC7C,EAA+BG,KAAKZ,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAACK,EAAD,WACE,cAAC,EAAD,CAAShB,MAAM,2BACf,cAAC,EAAD,CACEE,QAASwB,OAAOO,KAAKD,KAAKZ,OAC1BjB,gBAAiB6B,KAAKX,gBAEvBG,EACC,cAAC,EAAD,CACEf,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOY,EACPX,mBAAoBgB,IAGtB,cAAC,EAAD,CAAcd,QAAQ,6BA9ChC,GAAyBmB,aCFzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4d7b6b46.chunk.js","sourcesContent":["import propTypes from \"prop-types\";\r\nexport const Section = ({ title }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n    </>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n};\r\n","import propTypes from \"prop-types\";\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n     {options.map((item) => {\r\n        return (\r\n          <button key={item} name={item} onClick={()=> {onLeaveFeedback(item)}}>\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: propTypes.object.isRequired,\r\n  onLeaveFeedback: propTypes.func.isRequired,\r\n};\r\n","import propTypes from 'prop-types';\r\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2>Statistics</h2>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total} </p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: propTypes.number.isRequired,\r\n  neutral: propTypes.number.isRequired,\r\n  bad: propTypes.number.isRequired,\r\n  total:  propTypes.func.isRequired,\r\n  positivePercentage:  propTypes.func.isRequired\r\n}","import propTypes from 'prop-types';\r\nexport const Notification = ({message}) => {\r\n    return (\r\n        <p>{message}</p>\r\n    )\r\n}\r\nNotification.propTypes = {\r\n    message: propTypes.string.isRequired\r\n}","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\nheight: auto;\r\nmargin: 0  auto;\r\ntext-align: center;\r\npadding: 50px 0 500px;\r\nbackground-color: #FED99D;\r\n`","import { Component } from \"react\";\r\nimport { Section } from \"../Section/Section\";\r\nimport { FeedbackOptions } from \"../FeedbackOptions/FeedbackOptions \";\r\nimport { Statistics } from \"../Satistics/Satistics\";\r\nimport { Notification } from \"../Notification/Notification\";\r\nimport { Container } from \"./App.styled\";\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  leaveFeedback = (item) => {\r\n    this.setState((prevState) => ({\r\n      [item]: prevState[item] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    let total = 0;\r\n    for (let i = 0; i < Object.values(this.state).length; i += 1) {\r\n      total += Object.values(this.state)[i];\r\n    }\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    let totalFeedback = this.countTotalFeedback();\r\n    const percentage = (this.state.good / totalFeedback) * 100;\r\n    return percentage.toFixed(2);\r\n  };\r\n\r\n  render() {\r\n    const countTotalFeedback = this.countTotalFeedback();\r\n    const countPositiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <Container>\r\n        <Section title=\"Please, leave feedback\" />\r\n        <FeedbackOptions\r\n          options={Object.keys(this.state)}\r\n          onLeaveFeedback={this.leaveFeedback}\r\n        />\r\n        {countTotalFeedback ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={countTotalFeedback}\r\n            positivePercentage={countPositiveFeedbackPercentage}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}